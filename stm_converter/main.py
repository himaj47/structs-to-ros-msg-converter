import argparse
from pathlib import Path
from stm_converter.xml_parser import xmlParser
from stm_converter.ros_msg_generator import ROSMsgGenerator
from stm_converter.message_specification import MessageSpecification

def main():
    desc = "stm_converter arguments"
    parser = argparse.ArgumentParser(description=desc)

    parser.add_argument("filename", help="header file")
    parser.add_argument("-ns", "--namespace", help="namespace")

    args = parser.parse_args()

    path = Path(str(args.filename))
    filename = path.stem

    namespace = ""

    if args.namespace:
        namespace = args.namespace

    xml_parser = xmlParser(str(args.filename), namespace)
    structs_found, msg = xml_parser.get_decls()

    msg_gen = ROSMsgGenerator(structs_found, xml_parser.struct_name, filename, xml_parser.user_ns, msg=msg)
    if msg_gen.check_existance():
        print(f"{msg_gen.msg_filename_}.msg exists\ntype: {msg_gen.interface_type_}")

    # elif msg_gen.check_autogenerated_msgs():
    #     print(f"autogenerated msg present")
    else:
        msg_gen.gen_msgs()
        msg_gen.gen_type_adapter()

if __name__ == "__main__":
    main()
